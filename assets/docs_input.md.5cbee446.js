import{_ as o,a as t}from"./chunks/database-first-northwind-input-2.619467d1.js";import{_ as s,c as a,o as n,a as c,b as e}from"./app.2a3d5ed1.js";const y='{"title":"Input controls","description":"","frontmatter":{},"headers":[],"relativePath":"docs/input.md"}',i={},r=c('<h1 id="input-controls" tabindex="-1">Input controls <a class="header-anchor" href="#input-controls" aria-hidden="true">#</a></h1><p>The <code>PhotoPath</code> and <code>Notes</code> properties on the <code>Epmployee</code> table also have custom <code>InputAttribute</code> applied to change the Locode app HTML input type. Since the <code>PhotoPath</code> is related to a file upload and use of <code>UploadTo</code>, we want to have a way for the Locode client to upload files. <code>[Input(Type=Input.Types.File)]</code> adds metadata so the Locode app knows to use a file upload control for this field. The <code>Notes</code> property contains more long form text, so instead of the standard one line <code>text</code> input, an <code>Input.Types.Textarea</code> can be used.</p>',2),d=e("ul",{role:"list",class:"m-4 grid grid-cols-1 xl:grid-cols-2 gap-x-4 gap-y-8 xl:gap-x-8"},[e("li",{class:"relative"},[e("div",{class:"group block w-full aspect-w-13 aspect-h-6 rounded-lg bg-gray-100 focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-offset-gray-100 focus-within:ring-indigo-500 overflow-hidden"},[e("img",{src:o,alt:"",class:"object-cover pointer-events-none group-hover:opacity-75"})]),e("p",{class:"block text-sm font-medium text-gray-500 pointer-events-none"},"Without `Input`")]),e("li",{class:"relative"},[e("div",{class:"group block w-full aspect-w-13 aspect-h-6 rounded-lg bg-gray-100 focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-offset-gray-100 focus-within:ring-indigo-500 overflow-hidden"},[e("img",{src:t,alt:"",class:"object-cover pointer-events-none group-hover:opacity-75"})]),e("p",{class:"block text-sm font-medium text-gray-500 pointer-events-none"},"Custom `Input`")])],-1),p=[r,d];function l(u,h,f,g,_,m){return n(),a("div",null,p)}var x=s(i,[["render",l]]);export{y as __pageData,x as default};
