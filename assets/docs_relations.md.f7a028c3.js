import{_ as a,a as t}from"./chunks/database-first-northwind-input-2.619467d1.js";import{_ as e,c as p,o,a as s,b as n}from"./app.3e6fe014.js";var c="/assets/img/docs/locode-lookup.gif";const v='{"title":"Relations and Lookup Tables","description":"","frontmatter":{},"headers":[{"level":2,"title":"Relating tables","slug":"relating-tables"},{"level":3,"title":"Lookup tables and appearance","slug":"lookup-tables-and-appearance"}],"relativePath":"docs/relations.md"}',l={},i=s(`<h1 id="relations-and-lookup-tables" tabindex="-1">Relations and Lookup Tables <a class="header-anchor" href="#relations-and-lookup-tables" aria-hidden="true">#</a></h1><h2 id="relating-tables" tabindex="-1">Relating tables <a class="header-anchor" href="#relating-tables" aria-hidden="true">#</a></h2><p>With a more complex database schema, Locode app can use join tables as lookups providing an easy UI to relate rows.</p><p>The <a href="./.html">TalentBlazor</a> demo which is a Locode application where back office recruitment staff can manage job applications. It has 10 tables for all its functionality, but focusing on the main three of <code>Job</code>, <code>Contact</code> and <code>JobApplication</code> we can see how this functionality can save time.</p><div class="language-csharp"><pre><code><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Icon</span><span class="token attribute-arguments"><span class="token punctuation">(</span>Svg <span class="token operator">=</span> Icons<span class="token punctuation">.</span>Contact<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Contact</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">AuditBase</span></span>
<span class="token punctuation">{</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">AutoIncrement</span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> Id <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> DisplayName <span class="token operator">=&gt;</span> FirstName <span class="token operator">+</span> <span class="token string">&quot; &quot;</span> <span class="token operator">+</span> LastName<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> ProfileUrl <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> FirstName <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> LastName <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span><span class="token punctuation">?</span></span> SalaryExpectation <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> JobType <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> AvailabilityWeeks <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">EmploymentType</span> PreferredWorkType <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> PreferredLocation <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Email <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Phone <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> About <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="lookup-tables-and-appearance" tabindex="-1">Lookup tables and appearance <a class="header-anchor" href="#lookup-tables-and-appearance" aria-hidden="true">#</a></h3><p>With the database-first approach, foreign ke columns and table relationships are reflected in the Locode app with the use of look up tables when created, editing or navigating between services. In the Northwind example, this can be seen in services like <code>OrderDetails</code>, <code>Order</code> and <code>Product</code>. If the database doesn&#39;t have this relationship in the schema but you need to add it in Locode app, the <code>Ref</code> attribute can be ued.</p><div class="language-csharp"><pre><code>TypeFilter <span class="token operator">=</span> <span class="token punctuation">(</span>type<span class="token punctuation">,</span> req<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    <span class="token range operator">..</span><span class="token punctuation">.</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>type<span class="token punctuation">.</span>Name <span class="token operator">==</span> <span class="token string">&quot;Employee&quot;</span> <span class="token operator">||</span> type<span class="token punctuation">.</span><span class="token function">IsCrudCreateOrUpdate</span><span class="token punctuation">(</span><span class="token string">&quot;Employee&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token range operator">..</span><span class="token punctuation">.</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>type<span class="token punctuation">.</span><span class="token function">IsCrud</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token range operator">..</span><span class="token punctuation">.</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>type<span class="token punctuation">.</span>Name <span class="token operator">==</span> <span class="token string">&quot;Employee&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            type<span class="token punctuation">.</span><span class="token function">Property</span><span class="token punctuation">(</span><span class="token string">&quot;ReportsTo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">AddAttribute</span><span class="token punctuation">(</span>
                <span class="token keyword">new</span> <span class="token constructor-invocation class-name">RefAttribute</span> <span class="token punctuation">{</span> Model <span class="token operator">=</span> <span class="token string">&quot;Employee&quot;</span><span class="token punctuation">,</span> RefId <span class="token operator">=</span> <span class="token string">&quot;Id&quot;</span><span class="token punctuation">,</span> RefLabel <span class="token operator">=</span> <span class="token string">&quot;LastName&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div>`,8),u=n("ul",{role:"list",class:"m-4 grid grid-cols-1 xl:grid-cols-2 gap-x-4 gap-y-8 xl:gap-x-8"},[n("li",{class:"relative"},[n("div",{class:"group block w-full aspect-w-13 aspect-h-6 rounded-lg bg-gray-100 focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-offset-gray-100 focus-within:ring-indigo-500 overflow-hidden"},[n("img",{src:a,alt:"",class:"object-cover pointer-events-none group-hover:opacity-75"})]),n("p",{class:"block text-sm font-medium text-gray-500 pointer-events-none"},"Without `Input`")]),n("li",{class:"relative"},[n("div",{class:"group block w-full aspect-w-13 aspect-h-6 rounded-lg bg-gray-100 focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-offset-gray-100 focus-within:ring-indigo-500 overflow-hidden"},[n("img",{src:t,alt:"",class:"object-cover pointer-events-none group-hover:opacity-75"})]),n("p",{class:"block text-sm font-medium text-gray-500 pointer-events-none"},"Custom `Input`")])],-1),r=s('<p>This enables the lookup field UI functionality for the <code>ReportsTo</code> property making it is easy to select the correct <code>Id</code> to be stored in the same column.</p><img src="'+c+'" alt="" class="object-cover pointer-events-none group-hover:opacity-75"><p>The use of <code>RefLabel</code> controls which column on the <code>RefModel</code> is to be used as the visual data in the Locode app. The <code>RefId</code> is the target <code>RefModel</code> column in the foreign key relationship.</p>',3),k=[i,u,r];function d(y,g,h,w,m,f){return o(),p("div",null,k)}var T=e(l,[["render",d]]);export{v as __pageData,T as default};
