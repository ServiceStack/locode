import{_ as n,c as a,o as s,a as t}from"./app.9d7e1db1.js";var e="/assets/contact-formatters.291b0228.png",p="/assets/tracks-formatters.9da09a88.png",o="/assets/attachment-formatters.a32ffa7b.png",c="/assets/booking-formatters.46156fb2.png";const f='{"title":"Format Functions","description":"","frontmatter":{},"headers":[{"level":2,"title":"Custom Format Function","slug":"custom-format-function"},{"level":2,"title":"Format Attribute","slug":"format-attribute"},{"level":3,"title":"Number Formatters","slug":"number-formatters"},{"level":3,"title":"Format as Links","slug":"format-as-links"},{"level":3,"title":"Format Images","slug":"format-images"},{"level":2,"title":"Intl Attributes","slug":"intl-attributes"},{"level":3,"title":"Intl","slug":"intl"},{"level":3,"title":"IntlNumber","slug":"intlnumber"},{"level":3,"title":"IntlDateTime","slug":"intldatetime"},{"level":3,"title":"IntlRelativeTime","slug":"intlrelativetime"}],"relativePath":"docs/formatters.md"}',l={},r=t('<h1 id="format-functions" tabindex="-1">Format Functions <a class="header-anchor" href="#format-functions" aria-hidden="true">#</a></h1><p>Format functions let you customize how fields are displayed in tabular result pages, e.g:</p><p><a href="https://talent.locode.dev/locode/QueryContacts" target="_blank" rel="noopener noreferrer"><img src="'+e+`" alt=""></a></p><p>Where columns are customized using a built-in formatting function referenced by the <code>[Format]</code> attributes:</p><div class="language-csharp"><pre><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Contact</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">AuditBase</span></span>
<span class="token punctuation">{</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Format</span><span class="token attribute-arguments"><span class="token punctuation">(</span>FormatMethods<span class="token punctuation">.</span>IconRounded<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> ProfileUrl <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Format</span><span class="token attribute-arguments"><span class="token punctuation">(</span>FormatMethods<span class="token punctuation">.</span>Currency<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span><span class="token punctuation">?</span></span> SalaryExpectation <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token punctuation">[</span><span class="token function">Format</span><span class="token punctuation">(</span>FormatMethods<span class="token punctuation">.</span>LinkEmail<span class="token punctuation">,</span> Options <span class="token operator">=</span> 
        <span class="token string">@&quot;{target:&#39;_self&#39;,subject:&#39;New Job Opportunity&#39;,
           body:&#39;We have an exciting new opportunity...&#39;, cls:&#39;text-green-600&#39;}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Email <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
 
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Format</span><span class="token attribute-arguments"><span class="token punctuation">(</span>FormatMethods<span class="token punctuation">.</span>LinkPhone<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Phone <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token comment">//....</span>
<span class="token punctuation">}</span>
</code></pre></div><p>Whilst the <code>[Intl*]</code> attributes provide a typed API to utilize JavaScript&#39;s rich <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl" target="_blank" rel="noopener noreferrer">Intl</a> object containing the namespace for the ECMAScript Internationalization API, which provides number formatting, and date &amp; time formatting, e.g:</p><p><a href="https://chinook.locode.dev/locode/QueryTracks" target="_blank" rel="noopener noreferrer"><img src="`+p+`" alt=""></a></p><p>Which was rendered using the <code>[Format]</code> ant <code>[Intl*]</code> attributes below:</p><div class="language-csharp"><pre><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Tracks</span>
<span class="token punctuation">{</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Format</span><span class="token attribute-arguments"><span class="token punctuation">(</span>Method <span class="token operator">=</span> <span class="token string">&quot;stylize&quot;</span><span class="token punctuation">,</span> Options <span class="token operator">=</span> <span class="token string">&quot;{cls:&#39;text-rose-500&#39;}&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Name <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">IntlDateTime</span><span class="token attribute-arguments"><span class="token punctuation">(</span>Minute <span class="token operator">=</span> DatePart<span class="token punctuation">.</span>Digits2<span class="token punctuation">,</span> Second <span class="token operator">=</span> DatePart<span class="token punctuation">.</span>Digits2<span class="token punctuation">,</span> FractionalSecondDigits <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">long</span></span> Milliseconds <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Format</span><span class="token attribute-arguments"><span class="token punctuation">(</span>FormatMethods<span class="token punctuation">.</span>Bytes<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">long</span><span class="token punctuation">?</span></span> Bytes <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">IntlNumber</span><span class="token attribute-arguments"><span class="token punctuation">(</span>Currency <span class="token operator">=</span> NumberCurrency<span class="token punctuation">.</span>USD<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">decimal</span></span> UnitPrice <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token comment">//....</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="custom-format-function" tabindex="-1">Custom Format Function <a class="header-anchor" href="#custom-format-function" aria-hidden="true">#</a></h2><p>The <code>Name</code> column shows an example of calling a custom <code>stylize</code> JavaScript function defined in <a href="https://github.com/NetCoreApps/Chinook/blob/main/Chinook/wwwroot/modules/locode/custom.js" target="_blank" rel="noopener noreferrer">/modules/locode/custom.js</a>:</p><div class="language-js"><pre><code><span class="token comment">/**: Extend locode App with custom JS **/</span>

<span class="token comment">/** Custom [Format] method to style text with custom class
 * @param {*} val
 * @param {{cls:string}} [options] */</span>
<span class="token keyword">function</span> <span class="token function">stylize</span><span class="token punctuation">(</span><span class="token parameter">val<span class="token punctuation">,</span> options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> cls <span class="token operator">=</span> options <span class="token operator">&amp;&amp;</span> options<span class="token punctuation">.</span>cls <span class="token operator">||</span> <span class="token string">&#39;text-green-600&#39;</span>
    <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;span class=&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>cls<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>val<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/span&gt;</span><span class="token template-punctuation string">\`</span></span>
<span class="token punctuation">}</span>
</code></pre></div><p>Which makes use of <a href="https://jsdoc.app" target="_blank" rel="noopener noreferrer">JSDoc</a> and <a href="https://www.typescriptlang.org/docs/handbook/jsdoc-supported-types.html" target="_blank" rel="noopener noreferrer">TypeScript&#39;s JSDoc</a> support to <a href="./custom.html">enable rich static analysis</a>.</p><h2 id="format-attribute" tabindex="-1">Format Attribute <a class="header-anchor" href="#format-attribute" aria-hidden="true">#</a></h2><p>The <code>[Format]</code> attribute lets you call any JavaScript function that exists in your Locode App. These formatting functions take the <strong>field</strong> value as a first argument and optionally an <strong>options</strong> object as the 2nd argument, for further customization and can return any <strong>HTML</strong> fragment to render in-place of the field value.</p><p>Where the <code>[Format]</code> attribute&#39;s arguments:</p><div class="language-csharp"><pre><code><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Format</span><span class="token attribute-arguments"><span class="token punctuation">(</span>Method<span class="token punctuation">,</span>Options<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
</code></pre></div><p>Calls the JavaScript function of that name, passing any options if specified:</p><div class="language-js"><pre><code><span class="token function">method</span><span class="token punctuation">(</span>field<span class="token punctuation">,</span>options<span class="token punctuation">)</span>
</code></pre></div><p>For improved discoverability a typed list of all formatting functions are maintained in <a href="https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack.Interfaces/FormatMethods.cs" target="_blank" rel="noopener noreferrer">FormatMethods.cs</a> which map to the built-in JavaScript functions below which are also discoverable in the <a href="https://api.locode.dev/modules/shared.html#apiForm-1" target="_blank" rel="noopener noreferrer">API Reference Function docs</a>.</p><h3 id="number-formatters" tabindex="-1">Number Formatters <a class="header-anchor" href="#number-formatters" aria-hidden="true">#</a></h3><p>Use number formatters to render numbers in a more human-readable formats:</p><h4 id="formatmethods-currency" tabindex="-1"><code>FormatMethods.Currency</code> <a class="header-anchor" href="#formatmethods-currency" aria-hidden="true">#</a></h4><p>Formats a number into USD currency:</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token function">currency</span><span class="token punctuation">(</span>val<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
</code></pre></div><p>This is a shorthand alias for <code>[IntlNumber(Currency = NumberCurrency.USD)]</code>.</p><h4 id="formatmethods-bytes" tabindex="-1"><code>FormatMethods.Bytes</code> <a class="header-anchor" href="#formatmethods-bytes" aria-hidden="true">#</a></h4><p>Formats bytes into human-readable file size:</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token function">bytes</span><span class="token punctuation">(</span>val<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="format-as-links" tabindex="-1">Format as Links <a class="header-anchor" href="#format-as-links" aria-hidden="true">#</a></h3><p>The <code>link*</code> functions creates HTML Anchor links linking either URLs, emails or phone numbers. In addition to configuring common anchor attributes, the <code>opt</code> <strong>Options</strong> modifier also lets you configure any of its HTML attributes.</p><h4 id="formatmethods-link" tabindex="-1"><code>FormatMethods.Link</code> <a class="header-anchor" href="#formatmethods-link" aria-hidden="true">#</a></h4><p>Create formatted HTML A URL links:</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token function">link</span><span class="token punctuation">(</span>href<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> opt<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">{</span> cls<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span> target<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span> rel<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
</code></pre></div><h4 id="formatmethods-linkemail" tabindex="-1"><code>FormatMethods.LinkEmail</code> <a class="header-anchor" href="#formatmethods-linkemail" aria-hidden="true">#</a></h4><p>Create formatted HTML A <code>mailto:</code> anchor links:</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token function">linkMailTo</span><span class="token punctuation">(</span>email<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> opt<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">{</span> subject<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span> body<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    cls<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span> target<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span> rel<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
</code></pre></div><h4 id="formatmethods-linkphone" tabindex="-1"><code>FormatMethods.LinkPhone</code> <a class="header-anchor" href="#formatmethods-linkphone" aria-hidden="true">#</a></h4><p>Create formatted HTML A <code>tel:</code> anchor links:</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token function">linkTel</span><span class="token punctuation">(</span>tel<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> opt<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">{</span> cls<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span> target<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span> rel<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
</code></pre></div><h4 id="formatmethods-attachment" tabindex="-1"><code>FormatMethods.Attachment</code> <a class="header-anchor" href="#formatmethods-attachment" aria-hidden="true">#</a></h4><p>Creates HTML Link and preview icon for a file. If the file is an image it will render its icon otherwise will use the appropriate icon for its file type.</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token function">attachment</span><span class="token punctuation">(</span>url<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
</code></pre></div><p><a href="https://talent.locode.dev/locode/QueryJobApplicationAttachment" target="_blank" rel="noopener noreferrer"><img src="`+o+`" alt=""></a></p><p>Rendered with:</p><div class="language-csharp"><pre><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JobApplicationAttachment</span>
<span class="token punctuation">{</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Format</span><span class="token attribute-arguments"><span class="token punctuation">(</span>FormatMethods<span class="token punctuation">.</span>Attachment<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> FilePath <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Format</span><span class="token attribute-arguments"><span class="token punctuation">(</span>FormatMethods<span class="token punctuation">.</span>Bytes<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">long</span></span> ContentLength <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="format-images" tabindex="-1">Format Images <a class="header-anchor" href="#format-images" aria-hidden="true">#</a></h3><p>For rendering preview icons of an image instead of its relative or absolute URL.</p><h4 id="formatmethods-icon" tabindex="-1"><code>FormatMethods.Icon</code> <a class="header-anchor" href="#formatmethods-icon" aria-hidden="true">#</a></h4><p>Create HTML IMG Icon from URL</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token function">icon</span><span class="token punctuation">(</span>url<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
</code></pre></div><h4 id="formatmethods-iconrounded" tabindex="-1"><code>FormatMethods.IconRounded</code> <a class="header-anchor" href="#formatmethods-iconrounded" aria-hidden="true">#</a></h4><p>Create rounded HTML IMG Icon from URL</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token function">iconRounded</span><span class="token punctuation">(</span>url<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
</code></pre></div><h4 id="formatmethods-hidden" tabindex="-1"><code>FormatMethods.Hidden</code> <a class="header-anchor" href="#formatmethods-hidden" aria-hidden="true">#</a></h4><p>For hiding a column from appearing in query results:</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token function">hidden</span><span class="token punctuation">(</span>o<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
</code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>To hide a field from appearing in Create or Edit UI Forms use <code>[Input(Ignore=true)]</code> instead.</p></div><h2 id="intl-attributes" tabindex="-1">Intl Attributes <a class="header-anchor" href="#intl-attributes" aria-hidden="true">#</a></h2><p>The <code>[Intl*]</code> attributes provide a typed API to utilize ECMAScript Internationalization <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl" target="_blank" rel="noopener noreferrer">Intl</a> API providing flexible number formatting, and date &amp; time formatting functions:</p><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat" target="_blank" rel="noopener noreferrer">Intl.NumberFormat</a> (<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#examples" target="_blank" rel="noopener noreferrer">Examples</a>)</li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/DateTimeFormat" target="_blank" rel="noopener noreferrer">Intl.DateTimeFormat</a> (<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/DateTimeFormat#examples" target="_blank" rel="noopener noreferrer">Examples</a>)</li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/RelativeTimeFormat/RelativeTimeFormat" target="_blank" rel="noopener noreferrer">Intl.RelativeTimeFormat</a> (<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/RelativeTimeFormat/RelativeTimeFormat#examples" target="_blank" rel="noopener noreferrer">Examples</a>)</li></ul><p>The above referenced docs contain the available formatting options for each formatting function, we recommend using their JavaScript console to find out the formatting options you want, which should map 1:1 with the C# enums and constants in <a href="https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack.Interfaces/IntlAttribute.cs" target="_blank" rel="noopener noreferrer">IntlAttribute.cs</a>.</p><h3 id="intl" tabindex="-1">Intl <a class="header-anchor" href="#intl" aria-hidden="true">#</a></h3><p><code>[Intl]</code> is a generic attribute capable of calling any of the supported APIs although it&#39;s more UX-friendly to use the specific <code>[Intl*]</code> attributes instead, e.g:</p><div class="language-csharp"><pre><code><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">IntlNumber</span><span class="token attribute-arguments"><span class="token punctuation">(</span>Currency <span class="token operator">=</span> NumberCurrency<span class="token punctuation">.</span>USD<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
</code></pre></div><p>Is a shorter alias that&#39;s equivalent to:</p><div class="language-csharp"><pre><code><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Intl</span><span class="token attribute-arguments"><span class="token punctuation">(</span>IntlFormat<span class="token punctuation">.</span>Number<span class="token punctuation">,</span> Number <span class="token operator">=</span> NumberStyle<span class="token punctuation">.</span>Currency<span class="token punctuation">,</span> Currency <span class="token operator">=</span> NumberCurrency<span class="token punctuation">.</span>USD<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span> 
</code></pre></div><h3 id="intlnumber" tabindex="-1">IntlNumber <a class="header-anchor" href="#intlnumber" aria-hidden="true">#</a></h3><p>Makes use of <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat" target="_blank" rel="noopener noreferrer">Intl.NumberFormat</a> to format numbers, checkout <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#examples" target="_blank" rel="noopener noreferrer">Examples</a> for a quick preview of the common formatting options available.</p><div class="language-csharp"><pre><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">IntlNumberExamples</span>
<span class="token punctuation">{</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">IntlNumber</span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> Example1 <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">IntlNumber</span><span class="token attribute-arguments"><span class="token punctuation">(</span>NumberStyle<span class="token punctuation">.</span>Decimal<span class="token punctuation">,</span> Locale <span class="token operator">=</span> <span class="token string">&quot;en-AU&quot;</span><span class="token punctuation">,</span> 
                RoundingMode <span class="token operator">=</span> RoundingMode<span class="token punctuation">.</span>HalfCeil<span class="token punctuation">,</span> SignDisplay <span class="token operator">=</span> SignDisplay<span class="token punctuation">.</span>ExceptZero<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> Example2 <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">IntlNumber</span><span class="token attribute-arguments"><span class="token punctuation">(</span>Currency <span class="token operator">=</span> NumberCurrency<span class="token punctuation">.</span>USD<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> Example3 <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">IntlNumber</span><span class="token attribute-arguments"><span class="token punctuation">(</span>Currency <span class="token operator">=</span> NumberCurrency<span class="token punctuation">.</span>USD<span class="token punctuation">,</span> CurrencyDisplay <span class="token operator">=</span> CurrencyDisplay<span class="token punctuation">.</span>Code<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> Example4 <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">IntlNumber</span><span class="token attribute-arguments"><span class="token punctuation">(</span>Unit <span class="token operator">=</span> NumberUnit<span class="token punctuation">.</span>Kilobyte<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> Example5 <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>Which translates to the following JavaScript function invocations:</p><div class="language-js"><pre><code><span class="token keyword">const</span> number <span class="token operator">=</span> <span class="token number">123456.789</span><span class="token punctuation">;</span>

<span class="token comment">// Example 1: 123,456.789</span>
<span class="token keyword">new</span> <span class="token class-name">Intl<span class="token punctuation">.</span>NumberFormat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>number<span class="token punctuation">)</span>

<span class="token comment">// Example 2: +123,456.789</span>
<span class="token keyword">new</span> <span class="token class-name">Intl<span class="token punctuation">.</span>NumberFormat</span><span class="token punctuation">(</span><span class="token string">&#39;en-AU&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">style</span><span class="token operator">:</span> <span class="token string">&#39;decimal&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">roundingMode</span><span class="token operator">:</span><span class="token string">&#39;halfCeil&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">signDisplay</span><span class="token operator">:</span><span class="token string">&#39;exceptZero&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// Example 3: $123,456.79</span>
<span class="token keyword">new</span> <span class="token class-name">Intl<span class="token punctuation">.</span>NumberFormat</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">style</span><span class="token operator">:</span><span class="token string">&#39;currency&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">currency</span><span class="token operator">:</span><span class="token string">&#39;USD&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// Example 4: USD 123,456.79</span>
<span class="token keyword">new</span> <span class="token class-name">Intl<span class="token punctuation">.</span>NumberFormat</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">style</span><span class="token operator">:</span><span class="token string">&#39;currency&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">currency</span><span class="token operator">:</span><span class="token string">&#39;USD&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">currencyDisplay</span><span class="token operator">:</span><span class="token string">&#39;code&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// Example 5: 123,456.789 kB</span>
<span class="token keyword">new</span> <span class="token class-name">Intl<span class="token punctuation">.</span>NumberFormat</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">style</span><span class="token operator">:</span><span class="token string">&#39;unit&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">unit</span><span class="token operator">:</span><span class="token string">&#39;kilobyte&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><h3 id="intldatetime" tabindex="-1">IntlDateTime <a class="header-anchor" href="#intldatetime" aria-hidden="true">#</a></h3><p>Makes use of <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/DateTimeFormat" target="_blank" rel="noopener noreferrer">Intl.DateTimeFormat</a> to format dates and times, checkout <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/DateTimeFormat#examples" target="_blank" rel="noopener noreferrer">Examples</a> for available date &amp; time styles.</p><div class="language-csharp"><pre><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">IntlDateExamples</span>
<span class="token punctuation">{</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">IntlDateTime</span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">DateTime</span> Example1 <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">IntlDateTime</span><span class="token attribute-arguments"><span class="token punctuation">(</span>DateStyle<span class="token punctuation">.</span>Medium<span class="token punctuation">,</span> TimeStyle<span class="token punctuation">.</span>Short<span class="token punctuation">,</span> Locale <span class="token operator">=</span> <span class="token string">&quot;en-AU&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">DateTime</span> Example2 <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">IntlDateTime</span><span class="token attribute-arguments"><span class="token punctuation">(</span>DateStyle<span class="token punctuation">.</span>Short<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">DateTime</span> Example3 <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">IntlDateTime</span><span class="token attribute-arguments"><span class="token punctuation">(</span>Year <span class="token operator">=</span> DatePart<span class="token punctuation">.</span>Digits2<span class="token punctuation">,</span> Month <span class="token operator">=</span> DateMonth<span class="token punctuation">.</span>Short<span class="token punctuation">,</span> Day <span class="token operator">=</span> DatePart<span class="token punctuation">.</span>Numeric<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">DateTime</span> Example4 <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>Translates to:</p><div class="language-js"><pre><code><span class="token keyword">const</span> date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>Date<span class="token punctuation">.</span><span class="token constant">UTC</span><span class="token punctuation">(</span><span class="token number">2020</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">738</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Example 1: 12/20/2020</span>
<span class="token keyword">new</span> <span class="token class-name">Intl<span class="token punctuation">.</span>DateTimeFormat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span>

<span class="token comment">// Example 2: 20 Dec 2020, 11:23 am</span>
<span class="token keyword">new</span> <span class="token class-name">Intl<span class="token punctuation">.</span>DateTimeFormat</span><span class="token punctuation">(</span><span class="token string">&#39;en-AU&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">dateStyle</span><span class="token operator">:</span><span class="token string">&#39;medium&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">timeStyle</span><span class="token operator">:</span><span class="token string">&#39;short&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span>

<span class="token comment">// Example 3: 12/20/20</span>
<span class="token keyword">new</span> <span class="token class-name">Intl<span class="token punctuation">.</span>DateTimeFormat</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">dateStyle</span><span class="token operator">:</span><span class="token string">&#39;short&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span>

<span class="token comment">// Example 4: Dec 20, 20</span>
<span class="token keyword">new</span> <span class="token class-name">Intl<span class="token punctuation">.</span>DateTimeFormat</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">year</span><span class="token operator">:</span><span class="token string">&#39;2-digit&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">month</span><span class="token operator">:</span><span class="token string">&#39;short&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">day</span><span class="token operator">:</span><span class="token string">&#39;numeric&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span>
</code></pre></div><h3 id="intlrelativetime" tabindex="-1">IntlRelativeTime <a class="header-anchor" href="#intlrelativetime" aria-hidden="true">#</a></h3><p>Makes use of <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/RelativeTimeFormat/RelativeTimeFormat" target="_blank" rel="noopener noreferrer">Intl.RelativeTimeFormat</a> to format dates and times, checkout <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/RelativeTimeFormat/RelativeTimeFormat#examples" target="_blank" rel="noopener noreferrer">Examples</a> for common usages.</p><p>Can be applied to <code>DateTime</code> and <code>TimeSpan</code> properties to render a time that&#39;s relative to now, e.g:</p><div class="language-csharp"><pre><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Booking</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">AuditBase</span></span>
<span class="token punctuation">{</span>    
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">IntlDateTime</span><span class="token attribute-arguments"><span class="token punctuation">(</span>DateStyle<span class="token punctuation">.</span>Long<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">DateTime</span> BookingStartDate <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">IntlRelativeTime</span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">DateTime<span class="token punctuation">?</span></span> BookingEndDate <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">IntlRelativeTime</span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">TimeSpan</span> TimeAgo <span class="token operator">=&gt;</span> DateTime<span class="token punctuation">.</span>UtcNow <span class="token operator">-</span> <span class="token keyword">this</span><span class="token punctuation">.</span>BookingStartDate<span class="token punctuation">;</span>
    <span class="token comment">//....</span>
<span class="token punctuation">}</span>
</code></pre></div><p>Renders the following formatted date &amp; relative times:</p><p><img src="`+c+'" alt=""></p>',83),i=[r];function u(k,d,m,h,b,g){return s(),a("div",null,i)}var w=n(l,[["render",u]]);export{f as __pageData,w as default};
