import{_ as a,c as s,o as t,a as e}from"./app.a6e35efb.js";var o="/assets/img/database-first-northwind-branding1.png",n="/assets/img/database-first-northwind-branding2.png",p="/assets/custom-brand.9596ab3c.png",c="/assets/code-first-bookings-custom-1.c770c4b6.png",i="/assets/img/database-first-northwind-icons-default.png",l="/assets/img/database-first-northwind-icons-custom.png",u="/assets/img/database-first-northwind-tags.png";const y='{"title":"Appearance & Branding","description":"","frontmatter":{},"headers":[{"level":3,"title":"Custom Brand Component","slug":"custom-brand-component"},{"level":2,"title":"Custom Table Icons","slug":"custom-table-icons"},{"level":3,"title":"Custom Icons for Database-first tables","slug":"custom-icons-for-database-first-tables"},{"level":2,"title":"Grouping services with Tag","slug":"grouping-services-with-tag"},{"level":3,"title":"Adding Tags to Database-first tables","slug":"adding-tags-to-database-first-tables"}],"relativePath":"locode/branding.md"}',r={},d=e(`<h1 id="appearance-branding" tabindex="-1">Appearance &amp; Branding <a class="header-anchor" href="#appearance-branding" aria-hidden="true">#</a></h1><p>The logo at the top left can be changed by configuring the <code>UiFeature</code> plugin from your AppHost using <code>ConfigurePlugin&lt;UiFeature&gt;</code>.</p><div class="language-csharp"><pre><code><span class="token generic-method"><span class="token function">ConfigurePlugin</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>UiFeature<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>feature <span class="token operator">=&gt;</span> 
    feature<span class="token punctuation">.</span>Info<span class="token punctuation">.</span>BrandIcon <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ImageInfo</span> <span class="token punctuation">{</span> Uri <span class="token operator">=</span> <span class="token string">&quot;/logo.svg&quot;</span><span class="token punctuation">,</span> Cls <span class="token operator">=</span> <span class="token string">&quot;w-8 h-8 mr-1&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p><code>Uri</code> is the path of your own logo from the <code>wwwroot</code> folder and the <code>Cls</code> value is the CSS classes applied to the image.</p><ul class="my-8 grid gap-4 sm:grid-cols-2"><li class="rounded-lg m-0 col-span-1 flex flex-col text-center items-center bg-white shadow divide-y divide-gray-200"><div class="flex-1 flex flex-col px-4 mt-4"><div class="mt-4 p-0 text-xl font-medium text-gray-500">Default</div><div class="rounded-lg focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-offset-gray-100 focus-within:ring-indigo-500 overflow-hidden"><img src="`+o+'" alt=""></div></div></li><li class="rounded-lg m-0 col-span-1 flex flex-col text-center items-center bg-white shadow divide-y divide-gray-200"><div class="flex-1 flex flex-col px-4 mt-4"><div class="mt-4 p-0 text-xl font-medium text-gray-500">Custom branding</div><div class="rounded-lg focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-offset-gray-100 focus-within:ring-indigo-500 overflow-hidden"><img src="'+n+`" alt=""></div></div></li></ul><h3 id="custom-brand-component" tabindex="-1">Custom Brand Component <a class="header-anchor" href="#custom-brand-component" aria-hidden="true">#</a></h3><p>For even greater flexibility you can also replace the entire <a href="/locode/custom.html#custom-app-example">Brand.html component</a> by creating a local <code>Brand</code> component in <a href="https://github.com/NetCoreTemplates/blazor-wasm/blob/main/MyApp/wwwroot/modules/shared/Brand.html" target="_blank" rel="noopener noreferrer">/wwwroot/modules/shared/Brand.html</a> which the Blazor WASM template does with:</p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">App<span class="token punctuation">.</span><span class="token function">components</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">Brand</span><span class="token operator">:</span> <span class="token string">&#39;#brand-template&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>brand-template<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>flex items-center flex-shrink-0 max-w-sidebar<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">:title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>serviceName<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ $page:<span class="token punctuation">&#39;</span><span class="token punctuation">&#39;</span> }<span class="token punctuation">&quot;</span></span>
       <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text-2xl whitespace-nowrap overflow-x-hidden flex items-center<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2000/svg<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>w-8 h-8 ml-1 mr-2<span class="token punctuation">&quot;</span></span> <span class="token attr-name">viewBox</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>0 0 24 24<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">&gt;</span></span>
       {{serviceName}}
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>To render its <a href="https://blazor-wasm-api.jamstacks.net/ui" target="_blank" rel="noopener noreferrer">custom App Brand component</a>:</p><p><a href="https://blazor-wasm-api.jamstacks.net/ui" target="_blank" rel="noopener noreferrer"><img src="`+p+`" alt=""></a></p><h2 id="custom-table-icons" tabindex="-1">Custom Table Icons <a class="header-anchor" href="#custom-table-icons" aria-hidden="true">#</a></h2><p>Attributes added to your database model can change the visuals in your Locode application. For example, by adding <code>[Icon]</code> top of <code>Booking</code> specifying either an <code>Svg</code> or <code>Uri</code> path we can change the icon for the table in left menu and table relationships.</p><div class="language-csharp"><pre><code><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Icon</span><span class="token attribute-arguments"><span class="token punctuation">(</span>Svg <span class="token operator">=</span> <span class="token string">&quot;&lt;svg xmlns=\\&quot;http://www.w3.org/2000/svg\\&quot; ...&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Booking</span>
<span class="token punctuation">{</span>
    <span class="token range operator">..</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
</code></pre></div><p>Which will use this Icon whenever referring to <code>Booking</code> items:</p><p><img src="`+c+`" alt=""></p><h3 id="custom-icons-for-database-first-tables" tabindex="-1">Custom Icons for Database-first tables <a class="header-anchor" href="#custom-icons-for-database-first-tables" aria-hidden="true">#</a></h3><p>On database model classes, the <code>Icon</code> attribute can be used with a <code>Uri</code> or <code>Svg</code> to style the table in the left menu and when lookup data is displayed. For example, if we use the <code>TypeFilter</code> to access the data model types, we can apply the <code>Icon</code> attribute dynamically to <code>Order</code> it will impact the tables that reference <code>Order</code>.</p><div class="language-csharp"><pre><code>TypeFilter <span class="token operator">=</span> <span class="token punctuation">(</span>type<span class="token punctuation">,</span> req<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>Icons<span class="token punctuation">.</span><span class="token function">TryGetValue</span><span class="token punctuation">(</span>type<span class="token punctuation">.</span>Name<span class="token punctuation">,</span> <span class="token keyword">out</span> <span class="token class-name"><span class="token keyword">var</span></span> icon<span class="token punctuation">)</span><span class="token punctuation">)</span>
        type<span class="token punctuation">.</span><span class="token function">AddAttribute</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">IconAttribute</span> <span class="token punctuation">{</span> Svg <span class="token operator">=</span> Svg<span class="token punctuation">.</span><span class="token function">Create</span><span class="token punctuation">(</span>icon<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token range operator">..</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name">Dictionary<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">,</span> <span class="token keyword">string</span><span class="token punctuation">&gt;</span></span> Icons <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token punctuation">[</span><span class="token string">&quot;Order&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;&lt;path fill=&#39;currentColor&#39; ...&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><ul class="my-8 grid gap-4 sm:grid-cols-2"><li class="rounded-lg m-0 col-span-1 flex flex-col text-center items-center bg-white shadow divide-y divide-gray-200"><div class="flex-1 flex flex-col px-4 mt-4"><div class="mt-4 p-0 text-xl font-medium text-gray-500">Default Icon</div><div class="rounded-lg focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-offset-gray-100 focus-within:ring-indigo-500 overflow-hidden"><img src="`+i+'" alt=""></div></div></li><li class="rounded-lg m-0 col-span-1 flex flex-col text-center items-center bg-white shadow divide-y divide-gray-200"><div class="flex-1 flex flex-col px-4 mt-4"><div class="mt-4 p-0 text-xl font-medium text-gray-500">Custom Icon</div><div class="rounded-lg focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-offset-gray-100 focus-within:ring-indigo-500 overflow-hidden"><img src="'+l+`" alt=""></div></div></li></ul><h2 id="grouping-services-with-tag" tabindex="-1">Grouping services with Tag <a class="header-anchor" href="#grouping-services-with-tag" aria-hidden="true">#</a></h2><p>To group the Northwind services under the same <code>Tag</code> name for the left menu in Locode, we can use the <code>Tag</code> attribute.</p><div class="language-csharp"><pre><code><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Tag</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;Northwind&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Category</span> <span class="token punctuation">{</span> <span class="token range operator">..</span><span class="token punctuation">.</span> <span class="token punctuation">}</span>

<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Tag</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;Northwind&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Customer</span> <span class="token punctuation">{</span> <span class="token range operator">..</span><span class="token punctuation">.</span> <span class="token punctuation">}</span>
</code></pre></div><p>Instead of <code>Tables</code> we can now see our <code>Northwind</code> tag in the Locode app UI.</p><ul class="my-8 grid gap-4 sm:grid-cols-2"><li class="rounded-lg m-0 col-span-1 flex flex-col text-center items-center bg-white shadow divide-y divide-gray-200"><div class="flex-1 flex flex-col px-4 mt-4"><div class="mt-4 p-0 text-xl font-medium text-gray-500">Default &quot;Tables&quot;</div><div class="rounded-lg focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-offset-gray-100 focus-within:ring-indigo-500 overflow-hidden"><img src="`+n+'" alt=""></div></div></li><li class="rounded-lg m-0 col-span-1 flex flex-col text-center items-center bg-white shadow divide-y divide-gray-200"><div class="flex-1 flex flex-col px-4 mt-4"><div class="mt-4 p-0 text-xl font-medium text-gray-500">Custom Tag</div><div class="rounded-lg focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-offset-gray-100 focus-within:ring-indigo-500 overflow-hidden"><img src="'+u+`" alt=""></div></div></li></ul><p>As more unique <code>Tag</code> names are added, additional drop down menus will be created to group your services together.</p><h3 id="adding-tags-to-database-first-tables" tabindex="-1">Adding Tags to Database-first tables <a class="header-anchor" href="#adding-tags-to-database-first-tables" aria-hidden="true">#</a></h3><p>We can add the <code>[Tag]</code> attribute to all our Database-First Request DTOs using <a href="https://docs.servicestack.net/autoquery-autogen" target="_blank" rel="noopener noreferrer">AutoQuery AutoGen&#39;s</a> <code>ServiceFilter</code>:</p><div class="language-cs"><pre><code>GenerateCrudServices <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">GenerateCrudServices</span> <span class="token punctuation">{</span>
    AutoRegister <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    ServiceFilter <span class="token operator">=</span> <span class="token punctuation">(</span>op<span class="token punctuation">,</span> req<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">// Annotate all Auto generated Request DTOs with [Tag(&quot;Northwind&quot;)] attribute</span>
        op<span class="token punctuation">.</span>Request<span class="token punctuation">.</span><span class="token function">AddAttributeIfNotExists</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">TagAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;Northwind&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre></div>`,28),k=[d];function g(m,f,h,v,w,b){return t(),s("div",null,k)}var q=a(r,[["render",g]]);export{y as __pageData,q as default};
